/*
 * This file is generated by jOOQ.
 */
package com.nacho.blog.jooq.jooqdemo.gen.tables.records;


import com.nacho.blog.jooq.jooqdemo.gen.tables.TItem;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TItemRecord extends UpdatableRecordImpl<TItemRecord> implements Record4<String, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.t_item.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.t_item.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jooq.t_item.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.t_item.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jooq.t_item.f_product_id</code>.
     */
    public void setFProductId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.t_item.f_product_id</code>.
     */
    public String getFProductId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq.t_item.f_shipment_id</code>.
     */
    public void setFShipmentId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq.t_item.f_shipment_id</code>.
     */
    public String getFShipmentId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TItem.T_ITEM.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TItem.T_ITEM.QUANTITY;
    }

    @Override
    public Field<String> field3() {
        return TItem.T_ITEM.F_PRODUCT_ID;
    }

    @Override
    public Field<String> field4() {
        return TItem.T_ITEM.F_SHIPMENT_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getQuantity();
    }

    @Override
    public String component3() {
        return getFProductId();
    }

    @Override
    public String component4() {
        return getFShipmentId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getQuantity();
    }

    @Override
    public String value3() {
        return getFProductId();
    }

    @Override
    public String value4() {
        return getFShipmentId();
    }

    @Override
    public TItemRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TItemRecord value2(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public TItemRecord value3(String value) {
        setFProductId(value);
        return this;
    }

    @Override
    public TItemRecord value4(String value) {
        setFShipmentId(value);
        return this;
    }

    @Override
    public TItemRecord values(String value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TItemRecord
     */
    public TItemRecord() {
        super(TItem.T_ITEM);
    }

    /**
     * Create a detached, initialised TItemRecord
     */
    public TItemRecord(String id, Integer quantity, String fProductId, String fShipmentId) {
        super(TItem.T_ITEM);

        setId(id);
        setQuantity(quantity);
        setFProductId(fProductId);
        setFShipmentId(fShipmentId);
    }
}
