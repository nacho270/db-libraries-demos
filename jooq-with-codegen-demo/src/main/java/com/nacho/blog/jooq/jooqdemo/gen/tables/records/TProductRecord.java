/*
 * This file is generated by jOOQ.
 */
package com.nacho.blog.jooq.jooqdemo.gen.tables.records;


import com.nacho.blog.jooq.jooqdemo.gen.tables.TProduct;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductRecord extends UpdatableRecordImpl<TProductRecord> implements Record3<String, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.t_product.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.t_product.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jooq.t_product.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.t_product.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq.t_product.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.t_product.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TProduct.T_PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return TProduct.T_PRODUCT.NAME;
    }

    @Override
    public Field<BigDecimal> field3() {
        return TProduct.T_PRODUCT.PRICE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public BigDecimal component3() {
        return getPrice();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public BigDecimal value3() {
        return getPrice();
    }

    @Override
    public TProductRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TProductRecord value3(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public TProductRecord values(String value1, String value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TProductRecord
     */
    public TProductRecord() {
        super(TProduct.T_PRODUCT);
    }

    /**
     * Create a detached, initialised TProductRecord
     */
    public TProductRecord(String id, String name, BigDecimal price) {
        super(TProduct.T_PRODUCT);

        setId(id);
        setName(name);
        setPrice(price);
    }
}
