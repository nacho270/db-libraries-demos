/*
 * This file is generated by jOOQ.
 */
package com.nacho.blog.jooq.jooqdemo.gen.tables.records;


import com.nacho.blog.jooq.jooqdemo.gen.tables.TShipment;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TShipmentRecord extends UpdatableRecordImpl<TShipmentRecord> implements Record2<String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.t_shipment.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.t_shipment.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jooq.t_shipment.total</code>.
     */
    public void setTotal(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.t_shipment.total</code>.
     */
    public BigDecimal getTotal() {
        return (BigDecimal) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, BigDecimal> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TShipment.T_SHIPMENT.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return TShipment.T_SHIPMENT.TOTAL;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getTotal();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getTotal();
    }

    @Override
    public TShipmentRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TShipmentRecord value2(BigDecimal value) {
        setTotal(value);
        return this;
    }

    @Override
    public TShipmentRecord values(String value1, BigDecimal value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TShipmentRecord
     */
    public TShipmentRecord() {
        super(TShipment.T_SHIPMENT);
    }

    /**
     * Create a detached, initialised TShipmentRecord
     */
    public TShipmentRecord(String id, BigDecimal total) {
        super(TShipment.T_SHIPMENT);

        setId(id);
        setTotal(total);
    }
}
